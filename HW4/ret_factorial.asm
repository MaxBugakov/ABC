.data 
rep: .asciz "\n"
out: .asciz "\nМаксимальный факториал для int32: "
.text
	li t5, 2147483647 # Максимальное значение для INT32
	li t1, 1       

# Основной цикл
while:
	mv a0, t1    
	jal fact         # Вызов функции вычисления факториала

	# Вывод результата факториала n
	li a7, 1        
	ecall            

	addi t1, t1, 1   # Увеличиваем n на 1

	# Проверка на переполнение
	div t2, t5, t1   # Проверяем условие (n-1)! < MaxInt/n
	bgt a0, t2, end_while # Если a0 > t2, переходим к завершению

	# Вывод разделителя
	la a0, rep       
	li a7, 4         
	ecall         

	j while       

# Завершение цикла
end_while:
	addi t1, t1, -1  # Уменьшаем n на 1, так как последнее увеличение было лишним

	# Вывод финального сообщения
	li a7, 4         
	la a0, out       
	ecall           

	# Вывод результата
	li a7, 1         
	mv a0, t1   
	ecall            

	# Завершение программы
	li a7, 10       
	ecall           

# Функция для вычисления факториала
fact:   
	addi sp, sp, -8  # Выделяем место в стеке
	sw ra, 4(sp)     # Сохраняем ra
	sw s1, 0(sp)     # Сохраняем s1
	mv s1, a0        # s1 = n

	addi a0, s1, -1  # a0 = n - 1
	li t0, 1         
	ble a0, t0, done # Если n <= 1, переходим к done

	jal fact         # Рекурсивный вызов функции
	mul s1, s1, a0   # Вычисляем n * (n - 1)!

# Возврат из функции и восстановление регистров
done:   
	mv a0, s1        # Возвращаем результат в a0
	lw s1, 0(sp)     # Восстанавливаем s1
	lw ra, 4(sp)     # Восстанавливаем ra
	addi sp, sp, 8   # Освобождаем стек
	ret            
